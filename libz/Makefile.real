# @(#)Makefile	3.1

#  The RANLIB define should be "sh libfix" for systems that don't have
#	the ranlib command.  Systems that do have ranlib should set
#	RANLIB to "ranlib".  "libfix" is a Bourne shell file that will
#	use lorder and tsort to reorder the library.
RANLIB	= ranlib

# If you want something other than Eastern United States time used on your
# system, change the line below (after finding the zone you want in the
# time zone files, or adding it to a time zone file).
# Alternately, if you discover you've got the wrong time zone, you can just
#	zic -l rightzone
LOCALTIME=	US/Central

# Use an absolute path name for TZDIR unless you're just testing the software.
TZDIR=		/local/lib/zoneinfo

# You may want to change this define if you're just testing the software.
# Alternatively, you can put these functions in /lib/libc.a, removing
# the old "ctime.o" (and "timezone.o" on a BSD system).  This is the
# ideal solution if you are able.  Build libz.a, extract the files, and
# then add them to libc.a.
TZLIB=		libz.a

#
# If you want to use System V compatibility code, add
#	-DUSG_COMPAT
# to the end of the "TZCFLAGS=" line.
#
# If you want BSD compatibility code, add
#	-DBSD_COMPAT
# to the end of the "TZCFLAGS=" line.
#
# If you've used older versions of this software and want "tz_abbr"
# compatibility code, add
#	-DTZA_COMPAT
# to the end of the "TZCFLAGS=" line.
#
# If you'd like to use Robert Elz's additions to the "struct tm" structure,
# add a
#	-DKRE_COMPAT
# to the end of the "TZCFLAGS=" line, and add the structure elements
#	long	tm_gmtoff;
#	char *	tm_zone;
# to the END of the "struct tm" structure defined in "/usr/include/time.h".
#
# If you want code inspired by certain emerging standards, add
#	-DSTD_INSPIRED
# to the end of the "TZCFLAGS=" line.
#
# If you want Source Code Control System ID's left out of object modules, add
#	-DNOID
# to the end of the "TZCFLAGS=" line.
#
# If you'll never want to handle solar-time-based time zones, add
#	-DNOSOLAR
# to the end of the "TZCFLAGS=" line
# (and remove solar87 from the DATA= line below).
#
TZCFLAGS=-DTZDIR=\"$(TZDIR)\" -DNOID

################################################################################

TZCSRCS=	zic.c localtime.c asctime.c scheck.c ialloc.c mkdir.c
TZCOBJS=	zic.o localtime.o asctime.o scheck.o ialloc.o mkdir.o
TZDSRCS=	zdump.c localtime.c asctime.c ialloc.c
TZDOBJS=	zdump.o localtime.o asctime.o ialloc.o
LIBSRCS=	localtime.c asctime.c ctime.c dysize.c timemk.c
LIBOBJS=	localtime.o asctime.o ctime.o dysize.o timemk.o
DOCS=		Makefile.real Original.head README README.MMDF Theory \
		newctime.3 tzfile.5 zic.8 zdump.8
SOURCES=	tzfile.h zic.c zdump.c \
		localtime.c asctime.c ctime.c dysize.c timemk.c \
		scheck.c ialloc.c mkdir.c
DATA=		asia australasia europe etcetera northamerica \
		pacificnew systemv solar87

.c.o:
	$(CC) $(CFLAGS) $(TZCFLAGS) -c $<

real-default:	zic zdump $(TZLIB) reorder

install:	real-default
		./zic -l $(LOCALTIME) -d $(TZDIR) $(DATA) && > $@.log
		-cp ${TZLIB} /local/lib

# GETOPT - See README.MMDF
zic:		$(TZCOBJS)
		$(CC) $(LDFLAGS) -o $@ $(TZCOBJS) ${MMDFLIBS}

zdump:		$(TZDOBJS)
		$(CC) $(LDFLAGS) -o $@ $(TZDOBJS) ${MMDFLIBS}

$(TZLIB):	$(LIBOBJS)
		ar ru $@ $(LIBOBJS)

reorder:	reorder-done

reorder-done:	${TZLIB}
		-$(RANLIB) ${TZLIB}
		-touch reorder-done

lint:		$(TZCSRCS) $(TZDSRCS) tzfile.h
		lint $(LFLAGS) $(CFLAGS) ${TZCFLAGS} $(TZCSRCS)
		lint $(LFLAGS) $(CFLAGS) ${TZCFLAGS} $(TZDSRCS)
		lint $(LFLAGS) $(CFLAGS) ${TZCFLAGS} $(LIBSRCS)

clean:
		rm -f core *.o *.log reorder-done zdump zic ${TZLIB}

zdump.o zic.o newctime.o:	tzfile.h

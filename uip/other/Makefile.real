#
#		User Interface Processes (UIP)
#
#   Instructions to Make, for compilation of UIP processes
#
# C programs that live in the current directory and do not need
# explicit make lines.
#
PROGS	= xcheckmail xemactovi xmalias xmlist xnewmail xnewssend xrcvalert \
	  xrcvfile xrcvprint xrcvtrip xresend xsendmail xv6mail

MODULES = checkmail emactovi malias mlist newmail newssend rcvalert \
	  rcvfile rcvprint rcvtrip resend sendmail v6mail

INSTALLS = inst-xcheckmail inst-xemactovi inst-xmalias inst-xmlist \
	   inst-xnewmail inst-xnewssend inst-xrcvalert inst-xrcvfile \
	   inst-xrcvprint inst-xrcvtrip inst-xresend inst-xv6mail \
	   inst-xsendmail 

real-default:	${PROGS}

install: ${INSTALLS}

lint:	l-checkmail l-emactovi l-malias l-mlist l-newmail l-newssend \
	l-rcvalert l-rcvfile l-rcvprint l-rcvtrip l-resend l-sendmail \
	l-v6mail

clean:
	-rm -f x* *.o core make.out


###########################################################
#
#   checkmail:   what messages are in queue
#
inst-xcheckmail:  $(BINDIR)/checkmail

$(BINDIR)/checkmail:  xcheckmail
	cp xcheckmail $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod 04$(PGMPROT) $@
	echo "$(BINDIR)/checkmail" >> ${filelist}

xcheckmail :   checkmail.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ checkmail.o $(MMDFLIBS) $(SYSLIBS)

l-checkmail:
	lint $(LFLAGS) checkmail.c $(LLIBS)

###########################################################
#
#   emactovi:   convert two files into one for msg
#
inst-xemactovi:  $(BINDIR)/emactovi

$(BINDIR)/emactovi:  xemactovi
	cp xemactovi $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod 0$(PGMPROT) $@
	echo "$(BINDIR)/emactovi" >> ${filelist}

xemactovi :   emactovi.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ emactovi.o $(MMDFLIBS) $(SYSLIBS)

l-emactovi:
	lint $(LFLAGS) emactovi.c $(LLIBS)

###########################################################
#
#   malias: alias checkup routine
#
inst-xmalias: $(MCMDDIR)/$(PREF)malias

$(MCMDDIR)/$(PREF)malias: xmalias
	cp xmalias $@
	-chmod $(PGMPROT) $@
	echo "$(MCMDDIR)/$(PREF)malias" >> ${filelist}

xmalias:	malias.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ malias.o $(MMDFLIBS) $(SYSLIBS) $(DBM)

l-malias:
	lint $(LFLAGS) malias.c $(LLIBS)

###########################################################
#
#   mlist: mailing list maintainer
#
inst-xmlist: $(BINDIR)/$(PREF)mlist

$(BINDIR)/$(PREF)mlist: xmlist
	cp xmlist $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod 04$(PGMPROT) $@
	echo "$(BINDIR)/$(PREF)mlist" >> ${filelist}

xmlist:	mlist.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ mlist.o $(MMDFLIBS) $(SYSLIBS) $(DBM)

l-mlist:
	lint $(LFLAGS) mlist.c $(LLIBS)

###########################################################
#
#   newmail: check for newmail
#
inst-xnewmail: $(BINDIR)/$(PREF)newmail

$(BINDIR)/$(PREF)newmail: xnewmail
	cp xnewmail $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod 0$(PGMPROT) $@
	echo "$(BINDIR)/$(PREF)newmail" >> ${filelist}

xnewmail:	newmail.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ newmail.o $(MMDFLIBS) $(SYSLIBS) $(DBM)

l-newmail:
	lint $(LFLAGS) newmail.c $(LLIBS)

###########################################################
#
#   v6mail:   v6mail command replacement
#

inst-xv6mail:  $(BINDIR)/$(PREF)v6mail

$(BINDIR)/$(PREF)v6mail:  xv6mail
	cp xv6mail $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(BINDIR)/$(PREF)v6mail" >> ${filelist}

xv6mail:	v6mail.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ v6mail.o $(MMDFLIBS) $(SYSLIBS)

l-v6mail:
	lint $(LFLAGS) v6mail.c $(LLIBS)

###########################################################
#
#   rcvalert:   Alert user of incoming new mail
#

inst-xrcvalert:  $(RCVDIR)/$(PREF)rcvalert

$(RCVDIR)/$(PREF)rcvalert:  xrcvalert
	cp xrcvalert $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(RCVDIR)/$(PREF)rcvalert" >> ${filelist}

xrcvalert:	rcvalert.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ rcvalert.o $(MMDFLIBS) $(SYSLIBS)

l-rcvalert:
	lint $(LFLAGS) rcvalert.c $(LLIBS)

#############################################################
#
#   rcvfile: archive body of incoming mail into file named in subject
#

inst-xrcvfile:  $(RCVDIR)/$(PREF)rcvfile

$(RCVDIR)/$(PREF)rcvfile: xrcvfile
	cp xrcvfile $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(RCVDIR)/$(PREF)rcvfile" >> ${filelist}

xrcvfile:	rcvfile.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ rcvfile.o $(MMDFLIBS) $(SYSLIBS)

l-rcvfile:
	lint $(LFLAGS) rcvfile.c $(LLIBS)

############################################################
#
#   resend:  resend a message using RESEND-xxx notation
#

inst-xresend:  $(BINDIR)/resend

$(BINDIR)/$(PREF)resend: xresend
	cp xresend $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(BINDIR)/$(PREF)resend" >> ${filelist}

xresend:	resend.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ resend.o $(MMDFLIBS) $(SYSLIBS)

l-resend:
	lint $(LFLAGS) resend.c $(LLIBS)

############################################################
#
#   newssend:  Program to repost Netnews (USENET) news articles
#	       into an RFC822 mail world.  (based on resend)
#

inst-xnewssend:  $(MCMDDIR)/$(PREF)newssend

$(MCMDDIR)/$(PREF)newssend: xnewssend
	cp xnewssend $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod 04$(PGMPROT) $@
	echo "$(MCMDDIR)/$(PREF)newssend" >> ${filelist}

xnewssend:	newssend.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ newssend.o $(MMDFLIBS) $(SYSLIBS)

l-newssend:
	lint $(LFLAGS) newssend.c $(LLIBS)

############################################################
#
#   rcvprint: send a copy of the body of the message to opr
#

inst-xrcvprint:  $(RCVDIR)/$(PREF)rcvprint

$(RCVDIR)/$(PREF)rcvprint: xrcvprint
	cp xrcvprint $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(RCVDIR)/$(PREF)rcvprint" >> ${filelist}

xrcvprint:	rcvprint.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ rcvprint.o $(MMDFLIBS) $(SYSLIBS)

l-rcvprint:
	lint $(LFLAGS) rcvprint.c $(LLIBS)

##########################################################
#
#   rcvtrip: tell message senders of recipient unavailability
#

inst-xrcvtrip:  $(RCVDIR)/rcvtrip

$(RCVDIR)/$(PREF)rcvtrip: xrcvtrip
	cp xrcvtrip $@
	-$(CHOWN) $(MMDFLOGIN) $@
	-chmod $(PGMPROT) $@
	echo "$(RCVDIR)/$(PREF)rcvtrip" >> ${filelist}

xrcvtrip:	rcvtrip.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ rcvtrip.o $(MMDFLIBS) $(SYSLIBS)

l-rcvtrip:
	lint $(LFLAGS) rcvtrip.c $(LLIBS)

###########################################################
#
#   sendmail:   A fake for the Berkeley ${SBINDIR}/sendmail
#
inst-xsendmail:  ${SBINDIR}/sendmail

${SBINDIR}/sendmail:  xsendmail
	if test ! -f $@.orig; then \
		if test -f $@; then cp $@ $@.orig; fi; fi
	cp xsendmail $@
	$(CHOWN) $(MMDFLOGIN) $@
	chmod 04$(PGMPROT) $@
	if test -f ${install_prefix}/usr/lib/sendmail; then \
		cp ${install_prefix}/usr/lib/sendmail \
			${install_prefix}/usr/lib/sendmail.orig; fi
	rm -f ${install_prefix}/usr/lib/sendmail
	ln -s ${sbindir}/sendmail ${install_prefix}/usr/lib/sendmail
	echo "${install_prefix}/usr/lib/sendmail" >> ${filelist}
	echo "${SBINDIR}/sendmail" >> ${filelist}
	#-if test ! -f ${sbindir}/sendmail.orig; then \
	#	mv ${sbindir}/sendmail \
	#		 ${sbindir}/sendmail.orig;\
	#else \
	#	mv ${sbindir}/sendmail \
	#		 ${sbindir}/sendmail.orig$$;\
	#fi
	###-if test ! -f ${sbindir}/sendmail; then \
	###     -@echo "***** Please install sendmail by hand in /usr/lib. e.g."
	###     -@echo "ln -s ${sbindir}/sendmail /usr/sbin/sendmail"
	###else
	###     ln -s ${sbindir}/sendmail ${sbindir}/sendmail
	###fi

xsendmail :   sendmail.o $(MMDFLIBS)
	$(CC) $(LDFLAGS) -o $@ sendmail.o $(MMDFLIBS) $(SYSLIBS)

l-sendmail:
	lint $(LFLAGS) sendmail.c $(LLIBS)


# DO NOT DELETE THIS LINE -- make depend uses it

checkmail.o: checkmail.c
checkmail.o: ../../h/util.h
checkmail.o: ../../h/mmdf.h
checkmail.o: ../../h/ch.h
checkmail.o: ../../h/msg.h
checkmail.o: ../../h/adr_queue.h
emactovi.o: emactovi.c
malias.o: malias.c
malias.o: ../../h/util.h
malias.o: ../../h/mmdf.h
malias.o: ../../h/ch.h
malias.o: ../../h/dm.h
mlist.o: mlist.c
mlist.o: ../../h/util.h
mlist.o: ../../h/mmdf.h
mlist.o: ../../h/ch.h
newmail.o: newmail.c
newmail.o: ../../h/util.h
newssend.o: newssend.c
newssend.o: ../../h/util.h
newssend.o: ../../h/mmdf.h
newssend.o: ../../h/cnvtdate.h
rcvalert.o: rcvalert.c
rcvalert.o: ../../h/util.h
rcvalert.o: ../../h/mmdf.h
rcvfile.o: rcvfile.c
rcvfile.o: ../../h/util.h
rcvfile.o: ../../h/mmdf.h
rcvprint.o: rcvprint.c
rcvprint.o: ../../h/util.h
rcvprint.o: ../../h/mmdf.h
rcvtrip.o: rcvtrip.c
rcvtrip.o: ../../h/util.h
rcvtrip.o: ../../h/mmdf.h
rcvtrip.o: ../../h/ap.h
rcvtrip.o: ../../h/ch.h
rcvtrip.o: ../../h/hdr.h
resend.o: resend.c
resend.o: ../../h/util.h
resend.o: ../../h/mmdf.h
resend.o: ../../h/cnvtdate.h
sendmail.o: sendmail.c
sendmail.o: ../../h/util.h
sendmail.o: ../../h/mmdf.h
sendmail.o: ../../h/cnvtdate.h
v6mail.o: v6mail.c
v6mail.o: ../../h/util.h
v6mail.o: ../../h/mmdf.h
v6mail.o: ../../h/cnvtdate.h
# DEPENDENCIES MUST END AT END OF FILE
# IF YOU PUT STUFF HERE IT WILL GO AWAY
# see make depend above
